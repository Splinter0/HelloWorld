go.property("damage", 2)
go.property("damage_threshold", 0.5)

local CONTACT_POINT_RESPONSE = hash("contact_point_response")
local BALL = hash("ball")

function init(self)
	msg.post("#eyes", "disable")
end

function on_message(self, message_id, message, sender)
	if message_id == CONTACT_POINT_RESPONSE and message.group == BALL then
		-- only inflict damage on the pin if the collision distance is above a
		-- certain value
		if message.distance > self.damage_threshold then
			-- msg.post("/game/game", "increase_score", { score = 10 })
			self.damage = self.damage - 1
			if self.damage <= 0 then
				go.delete()
				return
			end
			
			-- play a sound and let volume depend a bit on the force/distance of the collision
			msg.post("/game/sounds", "play", { sound = "#bounce" .. math.random(1,3), gain = math.min(message.distance, 1) })
			
			-- change the visual representation of the eyes on the pin when it
			-- takes damage
			msg.post("#eyes", "enable")
			msg.post("#pin", "play_animation", { id = hash("spinner_hit") })
			-- create a delay before resetting the eyes to their normal animation
			go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, go.get_position(), go.EASING_LINEAR, 0.1, 0, function()
				msg.post("#eyes", "disable")
				msg.post("#pin", "play_animation", { id = hash("spinner") })
			end)
		end
	end
end
