local COLLISION_RESPONSE = hash("collision_response")
local BUCKET = hash("bucket")
local PIN = hash("pin")
local GROUND = hash("ground")

function init(self)
	self.life = 0
	self.collision = 0
	self.blinking = false
end

function update(self, dt)
	if self.life >= 7 then
		go.delete()
	elseif self.life > 5 and not self.blinking then
		go.animate("#sprite", "tint", go.PLAYBACK_LOOP_PINGPONG, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.5)
		self.blinking = true
	elseif self.life > 5.5 and not self.blinking then
		go.animate("#sprite", "tint", go.PLAYBACK_LOOP_PINGPONG, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.4)
		self.blinking = true
	elseif self.life > 6 and not self.blinking then
		go.animate("#sprite", "tint", go.PLAYBACK_LOOP_PINGPONG, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.3)
		self.blinking = true
	elseif self.life > 6.5 and not self.blinking then
		go.animate("#sprite", "tint", go.PLAYBACK_LOOP_PINGPONG, vmath.vector4(1,1,1,0), go.EASING_LINEAR, 0.2)
		self.blinking = true
		self.blinking = true
	elseif self.life < 7 and self.collision == 1 then
		self.life = self.life+dt
	end
end

function on_message(self, message_id, message, sender)
	--pprint(message)
	if message_id == COLLISION_RESPONSE then
		self.collision = 1
		-- add some score and remove the ball if colliding with a bucket
		if message.group == BUCKET then
			msg.post("/game/sounds", "play", { sound = "#basket" .. math.random(1, 3), gain = 0.7 })
			msg.post("/game/game", "increase_score", { score = 500 })
			go.delete()
		end 
	end
end
